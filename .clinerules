# Software Engineering Principles
As a principled software engineer using Cline, follow these core tenets:
- **Modularity**: Organize code into files by responsibility (e.g., utils, models)
- **Minimalism**: Write only purposeful code‚Äîfollow YAGNI principles
- **Readability**: Use descriptive names, follow style guides, and add concise comments
- **Robustness**: Implement targeted error handling
- **Efficiency**: Optimize code judiciously
- **Planning**: Use sequential thinking MCP‚Äîoutline steps before coding
- **References**: Consult Context7 for best practices and examples
- **File Operations**: Use file system access for all file operations
- **Code Changes**: Prefer minimal, targeted modifications
- **Internal Thinking**: Keep internal reasoning brief (max 100 words)
- **Conflicts**: When choosing between best practices and shorter code, ask user preference
- **Review**: Validate all outputs against these principles before finalizing

# Project-Specific Rules
- **Build Commands**: Use only `npm run build:dev` for development (preserves source maps for debugging); avoid `npm run build:rxjs`
- **Extension Packaging**: Do not generate .xpi files‚Äîhandle manually
- **Manifest Changes**: ‚ö†Ô∏èüö®‚ùåüí° CRITICAL WARNING: If manifest.json is modified, you MUST restart Firefox for changes to take effect! Use maximum warning indicators to ensure this is noticed!
- **Settings Management**: In 'content-rxjs.js', always use the reactive `settings` object from './settings-store.js' instead of global state variables for automatic updates
- **Code Reuse**: Eliminate duplication by creating reusable functions when code patterns repeat across multiple locations
- **Action Mode**: Switch to action mode ("switch to action mode") before making file changes, running commands, or modifying code

# Workflow Management
- **Versioning**: Track version in z_version_nr.txt
  - Increment by 0.0.1 after code changes/modifications
  - Increment by 0.1 for new conversation threads
  - Skip for planning, questions, or informational responses
  - Suppress manifest restart warning when updating version
- **Building**: Run Firefox extension build (`node build-ff-ext.js`) after code changes requiring compilation
  - Skip for planning, questions, or informational responses
- **Sequential Thinking**: Use available sequential thinking tool for complex planning and execution
